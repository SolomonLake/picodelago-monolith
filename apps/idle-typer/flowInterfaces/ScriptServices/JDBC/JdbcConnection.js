// @flow
// @see https://developers.google.com/apps-script/reference/jdbc/jdbc-connection

interface gas$JdbcConnection {
  clearWarnings(): void;
  close(): void;
  commit(): void;
  createArrayOf(typename: string, elements: Object[]): void;
  createBlob(): gas$JdbcBlob;
  createClob(): gas$JdbcClob;
  createNClob(): gas$JdbcClob;
  createSQLXML(): gas$JdbcSQLXML;
  createStatement(): gas$JdbcStatement;
  createStatement(resultSetType: number, resultSetConcurrency: number): gas$JdbcStatement;
  createStatement(resultSetType: number, resultSetConcurrency: number, resultSetHoldability: number): gas$JdbcStatement;
  createStruct(typeName: string, attributes: Object[]): gas$JdbcStruct;
  getAutoCommit(): boolean;
  getCatalog(): string;
  getHoldability(): number;
  getMetaData(): gas$JdbcDatabaseMetaData;
  getTransactionIsolation(): number;
  getWarnings(): string[];
  isClosed(): boolean;
  isReadOnly(): boolean;
  isValid(timeout: number): boolean;
  nativeSQL(sql: string): string;
  prepareCall(sql: string): string;
  prepareCall(sql: string, resultSetType: number, resultSetConcurrency: number): gas$JdbcCallableStatement;
  prepareCall(sql: string, resultSetType: number, resultSetConcurrency: number, resultSetHoldability: number): gas$JdbcCallableStatement;
  prepareStatement(sql: string): gas$JdbcPreparedStatement;
  prepareStatement(sql: string, autoGeneratedKeys: number): gas$JdbcPreparedStatement;
  prepareStatement(sql: string, resultSetType: number, resultSetConcurrency: number): gas$JdbcPreparedStatement;
  prepareStatement(sql: string, resultSetType: number, resultSetConcurrency: number, resultSetHoldability: number): gas$JdbcPreparedStatement;
  prepareStatementByIndex(sql: string, indices: number[]): gas$JdbcPreparedStatement;
  prepareStatementByName(sql: string, columnNames: string[]): gas$JdbcPreparedStatement;
  releaseSavepoint(savepoint: gas$JdbcSavepoint): void;
  rollback(): void;
  rollback(savepoint: gas$JdbcSavepoint): void;
  setAutoCommit(autoCommit: boolean): void;
  setCatalog(catalog: string): void;
  setReadOnly(readOnly: boolean): void;
  setSavepoint(): gas$JdbcSavepoint;
  setSavepoint(name: string): gas$JdbcSavepoint;
  setTransactionIsolation(level: number): void;
}
